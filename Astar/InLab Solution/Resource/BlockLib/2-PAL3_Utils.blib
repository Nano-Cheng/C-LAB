Block(Name=GripperFilter,Tool=GRP 1,Push=True,Pal3Name=$System.DefaultPal3Name$,FilterCapRack=FilterC,FilterVialRack=FilterV,FilterSampleRack=FilterVC,Tool2=LS 1)
//FilterTray FilterIndex FilterVialTray FilterVialIndex
    %Pal3Name%.ChangeTool(Tool=%Tool%)
    %Pal3Name%.ApproachObject(Target=%FilterCapRack%,Index=%FilterCapIndex%,OffsetZ=-3mm)
    %Pal3Name%.MovePlunger(Movement=4.5mm,IsRelativeMovement=False)
    %Pal3Name%.MoveRelative(MovementX=0mm,MovementY=0mm,MovementZ=7mm,AccelerationFactor=25%,ForceDirectMovement=True)
    %Pal3Name%.MovePlunger(Movement=3.02mm,IsRelativeMovement=False)
    %Pal3Name%.MoveRelative(MovementX=0mm,MovementY=0mm,MovementZ=-50mm,AccelerationFactor=25%,ForceDirectMovement=True)
    %Pal3Name%.ApproachObject(Target=%FilterVialRack%,Index=%FilterVialIndex%,OffsetZ=-25mm)
    %Pal3Name%.MoveTorqueMode(Axis=3,Distance=23mm,TorqueCurrent=500mA,Method=2)
    %Pal3Name%.MoveRelative(MovementX=0mm,MovementY=0mm,MovementZ=4mm,AccelerationFactor=11%,ForceDirectMovement=True)
    %Pal3Name%.MoveRelative(MovementX=0mm,MovementY=0mm,MovementZ=-4mm,AccelerationFactor=15%,ForceDirectMovement=True)
    %Pal3Name%.MovePlunger(Movement=4.5mm,IsRelativeMovement=False)
    %Pal3Name%.MoveRelative(MovementX=0mm,MovementY=0mm,MovementZ=-50mm,AccelerationFactor=65%,ForceDirectMovement=True)
    %Pal3Name%.LeaveObject()
    //%Pal3Name%.MovePlunger(Movement=0mm,IsRelativeMovement=False)
    //%Pal3Name%.MovePlunger(Movement=0mm,IsRelativeMovement=False)
    %Pal3Name%.Reset()
    //%Pal3Name%.MoveToHome()
    If('%Push%'=='True')
        %Pal3Name%.ChangeTool(Tool=%Tool2%)
        %Pal3Name%.PushObject(Target=%FilterSampleRack%,Index=%FilterSampleIndex%,Force=200mA)
        %Pal3Name%.LeaveObject()
        %Pal3Name%.MoveToHome()
    EndIf()
EndBlock()
Block(Name=ILVapPutHead,Pal3Name=$System.DefaultPal3Name$,VapTool=GT 1)
    %Pal3Name%.ChangeTool(Tool=%VapTool%)
    //复位卡扣
    %Pal3Name%.MoveNeedleGuide(Movement=0mm,IsRelativeMovement=False)
    //%Pal3Name%.MoveNeedleGuide(Movement=37.5mm,IsRelativeMovement=False)
    %Pal3Name%.MoveTorqueMode(Axis=4,Distance=37.5mm,TorqueCurrent=1500mA,Method=0)
    %Pal3Name%.Wait(Time=1s)
    %Pal3Name%.MoveNeedleGuide(Movement=0mm,IsRelativeMovement=False)
    %Pal3Name%.MovePlunger(Movement=21mm,Speed=20mm/s,IsRelativeMovement=False)
    //抓取氮吹头
    %Pal3Name%.ApproachObject(Target=ILVapHeadRack,Index=%HeadIndex%,OffsetZ=-2mm)
    %Pal3Name%.MoveTorqueMode(Axis=3,Distance=15mm,TorqueCurrent=1500mA,Method=2)
    %Pal3Name%.MoveRelative(MovementX=0mm,MovementY=0mm,MovementZ=-50mm,AccelerationFactor=60%,ForceDirectMovement=True)
    //压入瓶子
    %Pal3Name%.ApproachObject(Target=ILVapHeatRack,Index=%HeadIndex%,OffsetZ=-50mm)
    %Pal3Name%.MoveTorqueMode(Axis=3,Distance=20mm,TorqueCurrent=1400mA,Method=0)
    //退出氮吹头，留在瓶子上
    %Pal3Name%.MovePlunger(Movement=59mm,Speed=20mm/s,IsRelativeMovement=False)
    %Pal3Name%.MoveNeedleGuide(Movement=30mm,IsRelativeMovement=False)
    %Pal3Name%.MoveTorqueMode(Axis=3,Distance=35mm,TorqueCurrent=300mA,Method=1)
    %Pal3Name%.MoveNeedleGuide(Movement=35mm,IsRelativeMovement=False)
    %Pal3Name%.MoveToHome()
EndBlock()
Block(Name=ILVapBackHead,Pal3Name=$System.DefaultPal3Name$,VapTool=GT 1)
    %Pal3Name%.ChangeTool(Tool=%VapTool%)
    //复位卡扣
    %Pal3Name%.MoveNeedleGuide(Movement=0mm,IsRelativeMovement=False)
    %Pal3Name%.MoveTorqueMode(Axis=4,Distance=37.5mm,TorqueCurrent=1500mA,Method=0)
    %Pal3Name%.Wait(Time=1s)
    %Pal3Name%.MoveNeedleGuide(Movement=0mm,IsRelativeMovement=False)
    %Pal3Name%.MovePlunger(Movement=32mm,Speed=20mm/s,IsRelativeMovement=False)
    %Pal3Name%.MoveNeedleGuide(Movement=0mm,IsRelativeMovement=False)
    //抓取瓶子上的氮吹头
    %Pal3Name%.ApproachObject(Target=ILVapHeatRack,Index=%HeadIndex%,OffsetZ=-42mm)
    //%Pal3Name%.ApproachObject(Target=Item Position 2,Index=1)
    //%Pal3Name%.ApproachObject(Target=Rack 6,Index=1)
    %Pal3Name%.MoveTorqueMode(Axis=3,Distance=15mm,TorqueCurrent=1500mA,Method=2)
    //退出瓶子
    %Pal3Name%.MoveRelative(MovementX=0mm,MovementY=0mm,MovementZ=-20mm,AccelerationFactor=60%,ForceDirectMovement=True)
    %Pal3Name%.MovePlunger(Movement=11mm,Speed=20mm/s,IsRelativeMovement=False)
    %Pal3Name%.MovePlunger(Movement=21mm,Speed=20mm/s,IsRelativeMovement=False)
    //放回氮吹头
    %Pal3Name%.MoveRelative(MovementX=0mm,MovementY=0mm,MovementZ=-50mm,AccelerationFactor=60%,ForceDirectMovement=True)
    %Pal3Name%.ApproachObject(Target=ILVapHeadRack,Index=%HeadIndex%,OffsetZ=-20mm)
    %Pal3Name%.MoveTorqueMode(Axis=3,Distance=18mm,TorqueCurrent=300mA,Method=0)
    %Pal3Name%.MovePlunger(Movement=5mm,Speed=10mm/s,IsRelativeMovement=False)
    /*%Pal3Name%.MoveNeedleGuide(Movement=30mm,IsRelativeMovement=False)
    %Pal3Name%.MoveTorqueMode(Axis=3,Distance=30mm,TorqueCurrent=300mA,Method=1)
    %Pal3Name%.MoveNeedleGuide(Movement=35mm,IsRelativeMovement=False)*/
    %Pal3Name%.MoveToHome()
EndBlock()
Block(Name=PreDecap)
    SetVar(VarRange=Sample,VarName=$_DecapPos$,VarValue=None)
    If(StrContains(InsGetField('$WhichPal3$','%Target%.Vial'),'2-'))
        SetVar(VarRange=Sample,VarName=$_DecapPos$,VarValue=DC_V2)
    EndIf()
    If(StrContains(InsGetField('$WhichPal3$','%Target%.Vial'),'10-'))
        SetVar(VarRange=Sample,VarName=$_DecapPos$,VarValue=DC_V10)
    EndIf()
    If(StrContains(InsGetField('$WhichPal3$','%Target%.Vial'),'20-'))
        SetVar(VarRange=Sample,VarName=$_DecapPos$,VarValue=DC_V20)
    EndIf()
    If('$Sample._DecapPos$'=='None')
        System.ErrorExit(ErrorInfo="Can't DeCapper Position For Current Tray Vial Type")
    Else()
        SetVar(VarRange=Sample,VarName=$_DecapPosFromTray$,VarValue=%Target%)
        SetVar(VarRange=Sample,VarName=$_DecapPosFromIndex$,VarValue=%TargetIndex%)
        //$WhichPal3$.TransportVial(Source=%Target%:%TargetIndex%,Destination=DeCapper 1)
        //$WhichPal3$.UnscrewCap(Target=DeCapper 1,Retighten=True,SlipCheck=False)
        //$WhichPal3$.ParkDeCapper(Target=DeCapper 1)
        //$WhichPal3$.MoveToHome()
    EndIf()
EndBlock()

Block(Name=MoveVialIntoAgitator,Pal3Name=$System.DefaultPal3Name$,AgitatorName=Agitator 1,AgitatorSpeed=450)
//::AgitatorTemp AgitatorSpeed Source SourceIndex AgitatorIndex 
///:::Pal3Name AgitatorName
    InitVarIfNotExist(VarRange=%Pal3Name%,VarName=%AgitatorName%.InVialsCount,VarValue=0)
    %Pal3Name%.SetAgitator(Agitator=%AgitatorName%,State=False)
    %Pal3Name%.TransportVial(Source=%Source%:%SourceIndex%,Destination=%AgitatorName%,DestinationIndex=%AgitatorIndex%)
    SetVar(VarRange=%Pal3Name%,VarName=%AgitatorName%.InVialsCount,VarValue={$%Pal3Name%.%AgitatorName%.InVialsCount$+1})
    System.PrintMessage(Message="In Agitator Vial Count:$%Pal3Name%.%AgitatorName%.InVialsCount$",FCColor=Blue,BGColor=White)
    %Pal3Name%.MoveToHome()
    If(%AgitatorSpeed%!=-1 && %AgitatorSpeed%!=250)
        %Pal3Name%.SetAgitator(Agitator=%AgitatorName%,State=True,Speed=%AgitatorSpeed%rpm)
    EndIf()
EndBlock()
Block(Name=Pal3_CheckSimulatorIns,Pal3Name=$System.DefaultPal3Name$)
    If(InsGetField('%Pal3Name%','AuxPal3')=='False')
        If(StrStartWith(InsGetField('%Pal3Name%','_Address'),'127.0.0.1'))
            SetVar(VarRange=%Pal3Name%,VarName=$SimulatorIns$,VarValue=True)
        Else()
            SetVar(VarRange=%Pal3Name%,VarName=$SimulatorIns$,VarValue=False)
        EndIf()
    Else()
        If(InsVarExist('%Pal3Name%','BrotherPal3Name') && StrStartWith(InsGetField(InsGetField('%Pal3Name%','BrotherPal3Name'),'_Address'),'127.0.0.1'))
            SetVar(VarRange=%Pal3Name%,VarName=$SimulatorIns$,VarValue=True)
        Else()
            SetVar(VarRange=%Pal3Name%,VarName=$SimulatorIns$,VarValue=False)
        EndIf()
    EndIf()
EndBlock()
/*Block(Name=Pal3_AddTempMonitor,Pal3Name=$System.DefaultPal3Name$)
    SetVar(VarRange=%Pal3Name%,VarName=$TempControlCount$,VarValue={ListCount(InsGetField('%Pal3Name%','$ITemperatureControl$'))})
    If($%Pal3Name%.TempControlCount$ >0 && InsGetField('%Pal3Name%','AuxPal3')=='False')
        Repeat($%Pal3Name%.TempControlCount$)
            System.AddInsMonitor(Ins=%Pal3Name%,Name="{ListGetItem(InsGetField('%Pal3Name%','$ITemperatureControl$'),$LoopCount$-1)+'.ActualTemperature'}",Unit="%1#°C")
        EndRepeat()
    EndIf()
EndBlock()*/
Block(Name=Pal3_FindWashStation,Pal3Name=$System.DefaultPal3Name$)
    If(InsVarExist('%Pal3Name%','DefaultWash'))
        If(!StrContains(InsGetField('%Pal3Name%','IWashStation'),InsGetField('%Pal3Name%','DefaultWash')))
            If(ListCount(InsGetField('%Pal3Name%','IWashStation'))>0)
                SetVar(VarRange=%Pal3Name%,VarName=$DefaultWash$,VarValue={ListGetItem(InsGetField('%Pal3Name%','IWashStation'),0)})
            EndIf()
        EndIf()
    Else()
        If(ListCount(InsGetField('%Pal3Name%','IWashStation'))>0)
            SetVar(VarRange=%Pal3Name%,VarName=$DefaultWash$,VarValue={ListGetItem(InsGetField('%Pal3Name%','IWashStation'),0)})
        EndIf()
    EndIf()
    If(InsVarExist('%Pal3Name%','DefaultWaste'))
        If(!StrContains(InsGetField('%Pal3Name%','IWashStation'),InsGetField('%Pal3Name%','DefaultWaste')))
            If(ListCount(InsGetField('%Pal3Name%','IWashStation'))>0)
                SetVar(VarRange=%Pal3Name%,VarName=$DefaultWaste$,VarValue={ListGetItem(InsGetField('%Pal3Name%','IWashStation'),0)})
                SetVar(VarRange=%Pal3Name%,VarName=$DefaultWasteIndex$,VarValue={InsGetField('%Pal3Name%',ListGetItem(InsGetField('%Pal3Name%','IWashStation'),0)+'.MaxIndex')})
            EndIf()
        EndIf()
    Else()
        If(ListCount(InsGetField('%Pal3Name%','IWashStation'))>0)
            SetVar(VarRange=%Pal3Name%,VarName=$DefaultWaste$,VarValue={ListGetItem(InsGetField('%Pal3Name%','IWashStation'),0)})
            SetVar(VarRange=%Pal3Name%,VarName=$DefaultWasteIndex$,VarValue={InsGetField('%Pal3Name%',ListGetItem(InsGetField('%Pal3Name%','IWashStation'),0)+'.MaxIndex')})
        EndIf()
    EndIf()
    ///Large Syringe
    If(!InsVarExist('%Pal3Name%','DefaultLargeWashVolume'))
        SetVar(VarRange=%Pal3Name%,VarName=$DefaultLargeWashVolume$,VarValue=2500)
    EndIf()
    If(InsVarExist('%Pal3Name%','DefaultLargeWash'))
        If(!StrContains(InsGetField('%Pal3Name%','IWashStation'),InsGetField('%Pal3Name%','DefaultLargeWash')))
            If(ListCount(InsGetField('%Pal3Name%','IWashStation'))>0)
                SetVar(VarRange=%Pal3Name%,VarName=$DefaultLargeWash$,VarValue={ListGetItem(InsGetField('%Pal3Name%','IWashStation'),0)})
            EndIf()
        EndIf()
    Else()
        If(ListCount(InsGetField('%Pal3Name%','IWashStation'))>0)
            SetVar(VarRange=%Pal3Name%,VarName=$DefaultLargeWash$,VarValue={ListGetItem(InsGetField('%Pal3Name%','IWashStation'),0)})
        EndIf()
    EndIf()
    If(InsVarExist('%Pal3Name%','DefaultLargeWaste'))
        If(!StrContains(InsGetField('%Pal3Name%','IWashStation'),InsGetField('%Pal3Name%','DefaultLargeWaste')))
            If(ListCount(InsGetField('%Pal3Name%','IWashStation'))>0)
                SetVar(VarRange=%Pal3Name%,VarName=$DefaultLargeWaste$,VarValue={ListGetItem(InsGetField('%Pal3Name%','IWashStation'),0)})
                SetVar(VarRange=%Pal3Name%,VarName=$DefaultLargeWasteIndex$,VarValue={InsGetField('%Pal3Name%',ListGetItem(InsGetField('%Pal3Name%','IWashStation'),0)+'.MaxIndex')})
            EndIf()
        EndIf()
    Else()
        If(ListCount(InsGetField('%Pal3Name%','IWashStation'))>0)
            SetVar(VarRange=%Pal3Name%,VarName=$DefaultLargeWaste$,VarValue={ListGetItem(InsGetField('%Pal3Name%','IWashStation'),0)})
            SetVar(VarRange=%Pal3Name%,VarName=$DefaultLargeWasteIndex$,VarValue={InsGetField('%Pal3Name%',ListGetItem(InsGetField('%Pal3Name%','IWashStation'),0)+'.MaxIndex')})
        EndIf()
    EndIf()
EndBlock()

Block(Name=Pal3_FindAgitatorPosition,Pal3Name=$System.DefaultPal3Name$,AgitatorName=Agitator 1)
    SetCallParameterDefaultValue(Name=FindByIndex,Value=$Sample.Index$)
    SetCallParameterDefaultValue(Name=RealUsingList,Value="None")
    InitVarIfNotExist(VarRange=%Pal3Name%,VarName=$%AgitatorName%.UsingList$,VarValue=)

    If('%RealUsingList%'=='None')
        If('$%Pal3Name%.%Source%.VialVolume$'=='20 mL')
            SetVar(VarRange=%Pal3Name%,VarName=$%AgitatorName%.UsingList$,VarValue=$%Pal3Name%.%AgitatorName%.20mLPos$)
            SetVar(VarRange=%Pal3Name%,VarName=$%AgitatorName%.UsingCount$,VarValue=$%Pal3Name%.%AgitatorName%.20mLPos.Count$)
        EndIf()
        If('$%Pal3Name%.%Source%.VialVolume$'=='10 mL')
            SetVar(VarRange=%Pal3Name%,VarName=$%AgitatorName%.UsingList$,VarValue=$%Pal3Name%.%AgitatorName%.10mLPos$)
            SetVar(VarRange=%Pal3Name%,VarName=$%AgitatorName%.UsingCount$,VarValue=$%Pal3Name%.%AgitatorName%.10mLPos.Count$)
        EndIf()
        If('$%Pal3Name%.%Source%.VialVolume$'=='2 mL')
            SetVar(VarRange=%Pal3Name%,VarName=$%AgitatorName%.UsingList$,VarValue=$%Pal3Name%.%AgitatorName%.2mLPos$)
            SetVar(VarRange=%Pal3Name%,VarName=$%AgitatorName%.UsingCount$,VarValue=$%Pal3Name%.%AgitatorName%.2mLPos.Count$)
        EndIf()
    Else()
        SetVar(VarRange=%Pal3Name%,VarName=$%AgitatorName%.UsingList$,VarValue=%RealUsingList%)
        SetVar(VarRange=%Pal3Name%,VarName=$%AgitatorName%.UsingCount$,VarValue={ListCount('%RealUsingList%')})
    EndIf()
    System.PrintMessage(Message="Using Agitator List $%Pal3Name%.%AgitatorName%.UsingList$",FCColor=Blue,BGColor=White)
    If('$%Pal3Name%.%AgitatorName%.UsingList$'=='')
        SetVar(VarRange=%Pal3Name%,VarName=$%AgitatorName%.UsingPos$,VarValue=-1)
        SetVar(VarRange=%Pal3Name%,VarName=$%AgitatorName%.UsingCount$,VarValue=-1)
    Else()
        SetVar(VarRange=%Pal3Name%,VarName=$%AgitatorName%.FindIndex$,VarValue={(%FindByIndex% % $%Pal3Name%.%AgitatorName%.UsingCount$)-1})
        If($%Pal3Name%.%AgitatorName%.FindIndex$==-1)
            SetVar(VarRange=%Pal3Name%,VarName=$%AgitatorName%.FindIndex$,VarValue={$%Pal3Name%.%AgitatorName%.UsingCount$-1})
        EndIf()
        SetVar(VarRange=%Pal3Name%,VarName=$%AgitatorName%.UsingPos$,VarValue={ListGetItem('$%Pal3Name%.%AgitatorName%.UsingList$','$%Pal3Name%.%AgitatorName%.FindIndex$')})
    EndIf()
    System.PrintMessage(Message="Using Agitator Position $%Pal3Name%.%AgitatorName%.UsingPos$",FCColor=Blue,BGColor=White)
EndBlock()

Block(Name=MoveVialOutAgitator,Pal3Name=$System.DefaultPal3Name$,AgitatorName=Agitator 1)
//::Target TargetIndex 
///:::Pal3Name AgitatorName
    %Pal3Name%.PauseAgitator(Agitator=%AgitatorName%)
    %Pal3Name%.TransportVialHome(Vial=%Target%:%TargetIndex%)
    SetVar(VarRange=%Pal3Name%,VarName=%AgitatorName%.InVialsCount,VarValue={$%Pal3Name%.%AgitatorName%.InVialsCount$-1})
    System.PrintMessage(Message="In Agitator Vial Count:$%Pal3Name%.%AgitatorName%.InVialsCount$",FCColor=Blue,BGColor=White)
    %Pal3Name%.MoveToHome()
    If($%Pal3Name%.%AgitatorName%.InVialsCount$>0)
        %Pal3Name%.ResumeAgitator(Agitator=%AgitatorName%)
    Else()
        %Pal3Name%.SetAgitator(Agitator=%AgitatorName%,State=False)
    EndIf()
EndBlock()

Block(Name=Pal3_Utils_CleanSyringe,Pal3Name=$System.DefaultPal3Name$)
    SetCallParameterDefaultValue(Name=WashSource,Value={InsGetField('%Pal3Name%','DefaultWash')})
    SetCallParameterDefaultValue(Name=Waste,Value={InsGetField('%Pal3Name%','DefaultWaste')})
    SetCallParameterDefaultValue(Name=WasteIndex,Value={InsGetField('%Pal3Name%','DefaultWasteIndex')})

    SetVar(VarRange=System,VarName=$_%Pal3Name%.CleanOK$,VarValue=False)
    If(Condition="StrRegMatch(InsGetField('%Pal3Name%','OnHeadTool'),'LS ?(1|2|3|4|5|6)')")
        %Pal3Name%.MoveToHome()
        %Pal3Name%.CleanSyringe(WashSource=%WashSource%,WashIndex=1,WashVolume=100%,Cycles=2,WasteTarget=%Waste%,WasteIndex=%WasteIndex%,AspirateFlowRate=1uL/s,DispenseFlowRate=1uL/s)
        %Pal3Name%.CleanSyringe(WashSource=%WashSource%,WashIndex=2,WashVolume=100%,Cycles=2,WasteTarget=%Waste%,WasteIndex=%WasteIndex%,AspirateFlowRate=1uL/s,DispenseFlowRate=1uL/s)
        SetVar(VarRange=System,VarName=$_%Pal3Name%.CleanOK$,VarValue=True)
    EndIf()

    If(Condition="StrRegMatch(InsGetField('%Pal3Name%','OnHeadTool'),'HS ?(1|2|3|4|5|6)')")
        %Pal3Name%.StartPurgeSyringe()
        %Pal3Name%.Wait(Time=60s)
        %Pal3Name%.StopPurgeSyringe()
        SetVar(VarRange=System,VarName=$_%Pal3Name%.CleanOK$,VarValue=True)
    EndIf()

    If(Condition="StrRegMatch(InsGetField('%Pal3Name%','OnHeadTool'),'ITEX ?(1|2|3|4|5|6)')")
        %Pal3Name%.StartPurgeSyringe()
        %Pal3Name%.Wait(Time=60s)
        %Pal3Name%.StopPurgeSyringe()
        SetVar(VarRange=System,VarName=$_%Pal3Name%.CleanOK$,VarValue=True)
    EndIf()

    If(Condition="'$System._%Pal3Name%.CleanOK$'=='False'")
        System.InfoDialog(Message=Don't Know How To Clean Tool:$%Pal3Name%.OnHeadTool$)
    EndIf()
    %Pal3Name%.MoveToHome()
EndBlock()

Block(Name=Pal3_Utils_ThomSonFilter,Pal3Name=$System.DefaultPal3Name$)
///Grab FilterTray FilterIndex FilterVialTray FilterVialIndex
    If('$%Pal3Name%.ToolHandlingBehavior$'=='Automatic')
        %Pal3Name%.ChangeTool(Tool=%Grab%)
    EndIf()
    %Pal3Name%.MoveToObject(Target=%FilterTray%:%FilterIndex%,UseTouchDown=True)
    %Pal3Name%.MovePlunger(Movement=-0.0018000000000000002m,Speed=0.005m/s,IsRelativeMovement=False)
    %Pal3Name%.MoveNeedleGuide(Movement=0.06m,AccelerationFactor=17%,IsRelativeMovement=False)
    %Pal3Name%.MoveRelative(MovementZ=0.042m,AccelerationFactor=20%,DrfOption=1,ForceDirectMovement=True)
    %Pal3Name%.MovePlunger(Movement=0.0017m,Speed=0.005m/s,IsRelativeMovement=False)
    %Pal3Name%.MoveRelative(MovementZ=-0.02m,AccelerationFactor=50%,DrfOption=1,ForceDirectMovement=True)
    %Pal3Name%.MoveToObject(Target=%FilterVialTray%:%FilterVialIndex%,UseTouchDown=False)
    //补回瓶高差值
    %Pal3Name%.MoveRelative(MovementZ=0.00358749666737596m,AccelerationFactor=50%,DrfOption=1,ForceDirectMovement=True)
    %Pal3Name%.MoveRelative(MovementZ=0.01m,AccelerationFactor=50%,DrfOption=1,ForceDirectMovement=True)
    %Pal3Name%.MoveRelative(MovementZ=0.023m,AccelerationFactor=10%,DrfOption=1,ForceDirectMovement=True)
    %Pal3Name%.Wait(Time=2s)
    %Pal3Name%.MoveRelative(MovementZ=0.001m,AccelerationFactor=1%,DrfOption=1,ForceDirectMovement=True)
    %Pal3Name%.Wait(Time=2s)
    %Pal3Name%.MovePlunger(Movement=-0.0014m,Speed=0.005m/s,IsRelativeMovement=False)
    %Pal3Name%.MoveNeedleGuide(Movement=-0.02m,AccelerationFactor=1%,IsRelativeMovement=True)
    %Pal3Name%.MoveRelative(MovementZ=-0.02m,AccelerationFactor=50%,DrfOption=1,ForceDirectMovement=True)
    %Pal3Name%.MoveNeedleGuide(Movement=-0.01m,AccelerationFactor=17%,IsRelativeMovement=True)
    %Pal3Name%.MoveRelative(MovementZ=-0.03m,AccelerationFactor=50%,DrfOption=1,ForceDirectMovement=True)
    %Pal3Name%.MoveNeedleGuide(Movement=-0.03m,AccelerationFactor=17%,IsRelativeMovement=True)
    %Pal3Name%.MovePlunger(Movement=0.0014m,Speed=0.005m/s,IsRelativeMovement=False)
    %Pal3Name%.MoveToHome()
EndBlock()
Block(Name=Pal3_BatchCheckTrayPentrate,Pal3Name=$System.DefaultPal3Name$)
    If(InsGetField('%Pal3Name%','ToolHandlingBehavior')=='Automatic')
        %Pal3Name%.ChangeTool(Tool=%CheckTool%)
    EndIf()
    SetVar(VarRange=System,VarName=$_TmpList$,VarValue={ListCreateList('%CheckList%')})
    Repeat({ListCount('$System._TmpList$')})
        %Pal3Name%.MoveToObject(Target=%Target%,Index={ListGetItem('$System._TmpList$',$System.LoopCount$-1)},UseTouchDown=False)
        If(%TestDeep%==-1)
            %Pal3Name%.PenetrateObject(Target=%Target%,Index={ListGetItem('$System._TmpList$',$System.LoopCount$-1)})
        EndIf()
        If(%TestDeep%==-2)
            %Pal3Name%.PenetrateWithBottomSense(Target=%Target%,Index={ListGetItem('$System._TmpList$',$System.LoopCount$-1)},HeightFromBottom=200um)
        EndIf()
        If(%TestDeep%>0)
            %Pal3Name%.PenetrateObject(Target=%Target%,Index={ListGetItem('$System._TmpList$',$System.LoopCount$-1)},Depth=%TestDeep%mm)
        EndIf()
        If(InsGetField('%Pal3Name%','ToolHandlingBehavior')=='Automatic')
            %Pal3Name%.RetractNeedleGuide(Distance=20mm)
        EndIf()
        System.InputDialog(Prompt="Check Next Position?",Default=%NextWait%,Type=Timeout)
        If('$System._DialogResult$'=='Cancel')
            Break()
        EndIf()
        If(InsGetField('%Pal3Name%','ToolHandlingBehavior')=='Automatic')
            %Pal3Name%.LowerNeedleGuide()
        EndIf()
        %Pal3Name%.LeaveObject(LeaveDrawerOpen=True)
    EndRepeat()
    %Pal3Name%.LeaveObject(LeaveDrawerOpen=True)
    //%Pal3Name%.Reset()
EndBlock()
// vim: nowrap tw=0 ft=prepmacro
